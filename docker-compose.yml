version: "3.8"

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - app_db
    links:
      - app_db:postgres
    env_file:
      - .env
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}"
    networks:
      - app_network
    command: ["/scripts/wait-for-it.sh", "app_db:5432", "--", "npm", "start"]

  app_db:
    image: "postgres:13"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    ports:
      - "5433:5432"
    volumes:
      - "app_db_data:/var/lib/postgresql/data"
      - "./sql/01_create_tables.sql:/docker-entrypoint-initdb.d/01_create_tables.sql"
      - "./sql/02_seedData.sql:/docker-entrypoint-initdb.d/02_seedData.sql"
    networks:
      - app_network

  test:
    build: 
      context: .
      dockerfile: Dockerfile.test
    ports:
      - "3001:3001"
    volumes:
      - .:/app
    command: npm test
    depends_on:
      - test_db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_TEST_HOST}
      - POSTGRES_DB=${POSTGRES_TEST_DB}
    networks:
      - app_network

  test_db:
    image: "postgres:13"
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_TEST_DB}"
    ports:
      - "5434:5432"
    volumes:
      - "test_db_data:/var/lib/postgresql/data"
      - "./sql/01_create_tables.sql:/docker-entrypoint-initdb.d/01_create_tables.sql"

    networks:
      - app_network
    
volumes:
  app_db_data:
  test_db_data:

networks:
  app_network: